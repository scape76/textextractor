create table "public"."extractions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "userId" uuid,
    "text" text,
    "imageId" text
);


alter table "public"."extractions" enable row level security;

create table "public"."users" (
    "id" uuid not null,
    "created_at" timestamp with time zone default now(),
    "email" text
);


alter table "public"."users" enable row level security;

CREATE UNIQUE INDEX extractions_pkey ON public.extractions USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."extractions" add constraint "extractions_pkey" PRIMARY KEY using index "extractions_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."extractions" add constraint "extractions_userId_fkey" FOREIGN KEY ("userId") REFERENCES users(id) not valid;

alter table "public"."extractions" validate constraint "extractions_userId_fkey";

create policy "Authorized users can create extractions"
on "public"."extractions"
as permissive
for insert
to public
with check (true);


create policy "Everyone can access"
on "public"."extractions"
as permissive
for select
to public
using (true);


create policy "everyone can access"
on "public"."users"
as permissive
for all
to public
using (true);



